name: Deploy AWS Resources

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch

jobs:
  deploy_resources:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy S3 Buckets CloudFormation Stack        
        uses: aws-actions/aws-cloudformation-github-deploy@v1.0.4
        id: deploy-s3
        with:
          name: test-s3bucket
          template: cfn/s3.yml
          capabilities: CAPABILITY_IAM
          no-fail-on-empty-changeset: 1

      - name: Get S3 Bucket Output
        id: get-bucket-name
        run: |
          BUCKET_NAME=$(aws cloudformation describe-stacks --stack-name test-s3bucket --query "Stacks[0].Outputs[?OutputKey=='ImbaStanleyBucketName'].OutputValue" --output text)
          echo "BUCKET_NAME=${BUCKET_NAME}" >> $GITHUB_ENV
          echo "Bucket name: ${BUCKET_NAME}"

      - name: Zip Lambda function
        run: zip -j lambda.zip ./script/lambda.py

      - name: Upload Lambda Function into S3 bucket
        run: aws s3 cp lambda.zip s3://$BUCKET_NAME/lambda.zip
        if: steps.deploy-s3.outcome == 'success'

      - name: Deploy Lambda Function CloudFormation Stack
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        if: success()
        with:
          name: imba-LambdaFunction
          template: cfn/lambda.yml
          capabilities: CAPABILITY_IAM
          no-fail-on-empty-changeset: 1
